#summary Compares performances of same algorithms implemented with and without lambdaj

=WORK IN PROGESS!!!=

<table border="1">
  <tr>
    <td></td>
    <td colspan="3" align="center"><strong>iterative</strong></td>
    <td colspan="3" align="center"><strong>lambdaj</strong></td>
    <td></td>
  </tr>
  <tr>
    <td width="240px"></td>
    <td width="80px" align="center">min</td>
    <td width="80px" align="center">max</td>
    <td width="80px" align="center">avg</td>
    <td width="80px" align="center">min</td>
    <td width="80px" align="center">max</td>
    <td width="80px" align="center">avg</td>
    <td width="80px" align="center"><strong>ratio</strong></td>
  </tr>
  <tr>
    <td><a href="http://code.google.com/p/lambdaj/wiki/PerformanceAnalysis?ts=1281993389&updated=PerformanceAnalysis#Print_all_brands">Print all brands</a></td>
    <td align="right">265</td>
    <td align="right">327</td>
    <td align="right">283</td>
    <td align="right">1,233</td>
    <td align="right">1,482</td>
    <td align="right">1,298</td>
    <td align="right"><strong>4.587</strong></td>
  </tr>
  <tr>
    <td><a href="http://code.google.com/p/lambdaj/wiki/PerformanceAnalysis?ts=1281993389&updated=PerformanceAnalysis#Select_all_sales_of_a_Ferrari">Select all sales of a Ferrari</a></td>
    <td align="right">297</td>
    <td align="right">452</td>
    <td align="right">371</td>
    <td align="right">1,778</td>
    <td align="right">1,840</td>
    <td align="right">1,797</td>
    <td align="right"><strong>4.844</strong></td>
  </tr>
  <tr>
    <td><a href="http://code.google.com/p/lambdaj/wiki/PerformanceAnalysis?ts=1281993389&updated=PerformanceAnalysis#Find_buys_of_youngest_person">Find buys of youngest person</a></td>
    <td align="right">5,538</td>
    <td align="right">6,115</td>
    <td align="right">6,013</td>
    <td align="right">7,191</td>
    <td align="right">7,348</td>
    <td align="right">7,240</td>
    <td align="right"><strong>1.204</strong></td>
  </tr>
</table>

==Print all brands==
===iterative version:===
{{{
StringBuilder sb = new StringBuilder();
for (Car car : db.getCars()) 
    sb.append(car.getBrand()).append(", ");
String brands = sb.toString().substring(0, sb.length()-2);
}}}
===lambdaj version:===
{{{
String brands = joinFrom(db.getCars()).getBrand();
}}}

==Select all sales of a Ferrari==
===iterative version:===
{{{
List<Sale> salesOfAFerrari = new ArrayList<Sale>();
for (Sale sale : sales) {
    if (sale.getCar().getBrand().equals("Ferrari")) 
        salesOfAFerrari.add(sale);
}
}}}
===lambdaj version:===
{{{
List<Sale> salesOfAFerrari = select(sales,
    having(on(Sale.class).getCar().getBrand(),equalTo("Ferrari")));
}}}

==Find buys of youngest person==
===iterative version:===
{{{
Person youngest = null;
for (Person person : persons)
    if (youngest == null || person.getAge() < youngest.getAge())
        youngest = person;
List<Sale> buys = new ArrayList<Sale>();
for (Sale sale : sales)
    if (sale.getBuyer().equals(youngest)) 
        buys.add(sale);
}}}
===lambdaj version:===
{{{
List<Sale> sales = select(sales,having(on(Sale.class).getBuyer(),
    equalTo(selectMin(persons, on(Person.class).getAge()))));
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}

==x==
===iterative version:===
{{{
}}}
===lambdaj version:===
{{{
}}}